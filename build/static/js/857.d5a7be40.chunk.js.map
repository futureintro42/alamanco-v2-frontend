{"version":3,"file":"static/js/857.d5a7be40.chunk.js","mappings":"yOAWA,MA2GA,EA3GmBA,KACjB,MAAMC,GAAWC,EAAAA,EAAAA,OACVC,EAAUC,GAAeC,EAAAA,SAAe,UACxCC,EAASC,GAAcF,EAAAA,SAAe,KACtCG,EAAUC,GAAeJ,EAAAA,SAAe,KACxCK,EAAYC,GAAiBN,EAAAA,SAAe,KAC5CO,EAAaC,GAAgBR,EAAAA,UAAe,IAC5CS,GAAY,QAAEC,EAAO,MAAEC,EAAK,KAAEC,KAAUC,EAAAA,EAAAA,GAAYC,EAAAA,KACrD,SACJC,EAAQ,aACRC,EAAY,SACZC,EAAQ,WACRC,EACAC,WAAW,OAAEC,KACXC,EAAAA,EAAAA,IAAQ,CACVC,UAAUC,EAAAA,EAAAA,GAAYC,EAAAA,MA8BxBxB,EAAAA,WAAgB,KACd,IAAKU,IAAYC,GAASC,EAAM,CAC9B,MAAMa,EAAWb,EAAKH,WACtBV,EAAY0B,EAAS3B,UACrBI,EAAWuB,EAASxB,UACpByB,EAAAA,EAAAA,IAAYD,EAASd,MAAOM,GAC5BT,GAAa,IACRiB,EAASd,OAASc,EAAS3B,SAAS6B,SAAS,YAChD/B,EAAS,SAEb,IACC,CAACc,EAASC,EAAOC,EAAMb,EAAaG,EAAYe,EAAUrB,IAgC7D,OACEgC,EAAAA,EAAAA,KAACC,EAAAA,EAAQ,CACPb,aAAcA,EACdc,gBAzEoBA,CAAClB,EAAMmB,KAC7BA,EAAEC,iBACF,MAAM,KAACC,EAAI,aAAEC,EAAY,aAAEC,EAAY,QAAEC,EAAO,SAAEC,GAChDzB,EACF,IAAI0B,EAAa1B,EAAK0B,WAAWC,MAAM,KACvCD,EAAU,GAAAE,OAAMF,EAAW,GAAE,KAAAE,OAAIF,EAAW,GAAE,KAAAE,OAAIF,EAAW,IAC7D,IAAIG,EAAc7B,EAAK6B,YAAYF,MAAM,KACzCE,EAAW,GAAAD,OAAMC,EAAY,GAAE,KAAAD,OAAIC,EAAY,GAAE,KAAAD,OAAIC,EAAY,IAEjEhC,EAAW,CACTiC,UAAW,CACTC,MAAO,CACLC,IAAK,GACLX,OACAC,eACAC,eACAG,aACAG,cACAL,UACAC,WACAQ,YAAaxC,KAGjB,EAmDAU,SAAUA,EACVK,OAAQA,EACRtB,SAAUA,EACVG,QAASA,EACTM,YAAaA,EACbuC,MAAM,cACNC,aAAa,SACbT,WAAW,GACXG,YAAY,GACZO,oBA1CyBC,IAC3B,MAAM,MAAEC,GAAUD,EAAME,OACxB,GAAID,GAASA,EAAM,GAAI,CACrB,MAAM,KAAEjB,EAAI,KAAEmB,GAASF,EAAM,GACvBG,EAAWD,EAAO,KAAO,KACL,+BACHE,KAAKrB,GAMjBoB,EAAW,EACpBpC,EAAS,cAAe,CACtBsC,KAAM,SACNtD,QAAS,6BAGXuD,EAAAA,EAAAA,IAAcP,EAAME,QACjBM,MAAMC,IACLtD,EAAYsD,GACZpD,EAAcoD,GACdxC,EAAW,cAAc,IAE1ByC,OAAOC,GAAQC,QAAQlD,MAAMiD,KAjBhC3C,EAAS,cAAe,CACtBsC,KAAM,SACNtD,QACE,2EAgBR,GAiBEE,SAAUA,GACV,C","sources":["components/templates/Cards/Create.js"],"sourcesContent":["import React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport CardForm from \"../../molecules/CardForm\";\r\nimport { cardSchema } from \"../../../utils/schema\";\r\nimport { CREATE_CARD } from \"../../../constants/Mutation\";\r\nimport { isValidated, uploadManager } from \"../../../utils/utils\";\r\n\r\nconst CreateCard = () => {\r\n  const navigate = useNavigate();\r\n  const [severity, setSeverity] = React.useState(\"error\");\r\n  const [message, setMessage] = React.useState(\"\");\r\n  const [imageSrc, setImageSrc] = React.useState(\"\");\r\n  const [imageValue, setImageValue] = React.useState(\"\");\r\n  const [isSubmitted, setSubmitted] = React.useState(false);\r\n  const [createCard, { loading, error, data }] = useMutation(CREATE_CARD);\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    setError,\r\n    resetField,\r\n    formState: { errors },\r\n  } = useForm({\r\n    resolver: yupResolver(cardSchema),\r\n  });\r\n\r\n  const onSubmitHandler = (data, e) => {\r\n    e.preventDefault();\r\n    const {name, iqama_number, certified_as, company, examiner } =\r\n      data;\r\n    let issue_date = data.issue_date.split(\"/\");\r\n    issue_date = `${issue_date[2]}-${issue_date[1]}-${issue_date[0]}`;\r\n    let expiry_date = data.expiry_date.split(\"/\");\r\n    expiry_date = `${expiry_date[2]}-${expiry_date[1]}-${expiry_date[0]}`;\r\n\r\n    createCard({\r\n      variables: {\r\n        input: {\r\n          _id: \"\",\r\n          name,\r\n          iqama_number,\r\n          certified_as,\r\n          issue_date,\r\n          expiry_date,\r\n          company,\r\n          examiner,\r\n          profile_pic: imageValue,\r\n        },\r\n      },\r\n    });\r\n  };\r\n\r\n  // Response: Submit Handler\r\n  React.useEffect(() => {\r\n    if (!loading && !error && data) {\r\n      const response = data.createCard;\r\n      setSeverity(response.severity);\r\n      setMessage(response.message);\r\n      isValidated(response.error, setError);\r\n      setSubmitted(false);\r\n      if (!response.error && response.severity.includes(\"success\")) {\r\n        navigate(\"/cards\");\r\n      }\r\n    }\r\n  }, [loading, error, data, setSeverity, setMessage, setError, navigate]);\r\n\r\n  // File upload handler\r\n  const onChangeFileHandler = (event) => {\r\n    const { files } = event.target;\r\n    if (files && files[0]) {\r\n      const { name, size } = files[0];\r\n      const fileSize = size / 1024 / 1024; // in MiB\r\n      const allowedExtensions = /(\\.jpg|\\.jpeg|\\.png|\\.gif)$/i;\r\n      if (!allowedExtensions.exec(name)) {\r\n        setError(\"profile_pic\", {\r\n          type: \"manual\",\r\n          message:\r\n            \"Please you can upload file having extensions .jpeg/.jpg/.png/.gif only.\",\r\n        });\r\n      } else if (fileSize > 5) {\r\n        setError(\"profile_pic\", {\r\n          type: \"manual\",\r\n          message: \"File size exceeds 5 MiB\",\r\n        });\r\n      } else {\r\n        uploadManager(event.target)\r\n          .then((src) => {\r\n            setImageSrc(src);\r\n            setImageValue(src);\r\n            resetField(\"profile_pic\");\r\n          })\r\n          .catch((err) => console.error(err));\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <CardForm\r\n      handleSubmit={handleSubmit}\r\n      onSubmitHandler={onSubmitHandler}\r\n      register={register}\r\n      errors={errors}\r\n      severity={severity}\r\n      message={message}\r\n      isSubmitted={isSubmitted}\r\n      title=\"Create Card\"\r\n      submitBtnTxt=\"Create\"\r\n      issue_date=\"\"\r\n      expiry_date=\"\"\r\n      onChangeFileHandler={onChangeFileHandler}\r\n      imageSrc={imageSrc}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CreateCard;\r\n"],"names":["CreateCard","navigate","useNavigate","severity","setSeverity","React","message","setMessage","imageSrc","setImageSrc","imageValue","setImageValue","isSubmitted","setSubmitted","createCard","loading","error","data","useMutation","CREATE_CARD","register","handleSubmit","setError","resetField","formState","errors","useForm","resolver","yupResolver","cardSchema","response","isValidated","includes","_jsx","CardForm","onSubmitHandler","e","preventDefault","name","iqama_number","certified_as","company","examiner","issue_date","split","concat","expiry_date","variables","input","_id","profile_pic","title","submitBtnTxt","onChangeFileHandler","event","files","target","size","fileSize","exec","type","uploadManager","then","src","catch","err","console"],"sourceRoot":""}