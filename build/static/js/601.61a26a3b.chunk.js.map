{"version":3,"file":"static/js/601.61a26a3b.chunk.js","mappings":"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","sources":["components/molecules/ProfileDetails/UpdateProfileForm.js","components/molecules/ProfileDetails/index.js","components/templates/Profile/index.js","constants/Mutation.js","utils/schema.js"],"sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport {\r\n  Button,\r\n  Grid,\r\n  Box,\r\n  FormHelperText,\r\n  Alert,\r\n  TextField,\r\n  Checkbox,\r\n  FormControlLabel,\r\n} from \"@mui/material\";\r\n\r\nimport { updateProfileSchema } from \"../../../utils/schema\";\r\nimport { isValidated } from \"../../../utils/utils\";\r\nimport { UPDATE_PROFILE } from \"../../../constants/Mutation\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst UpdateProfileForm = ({ _id, first_name, last_name, role }) => {\r\n  const auth = useSelector((state) => state.auth);\r\n  const isAdmin = !!(auth?.isLoggedIn && auth?.role === \"admin\");\r\n  const [severity, setSeverity] = React.useState(\"\");\r\n  const [message, setMessage] = React.useState(\"\");\r\n  const [isSubmitted, setSubmitted] = React.useState(false);\r\n  const [defaultRole, setDefaultRole] = React.useState(\r\n    role === \"ADMIN\" ? true : false\r\n  );\r\n  const [updateProfile, { loading, error, data }] = useMutation(UPDATE_PROFILE);\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    setError,\r\n    setValue,\r\n    formState: { errors },\r\n  } = useForm({\r\n    resolver: yupResolver(updateProfileSchema),\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    const defaultRole = role === \"ADMIN\" ? true : false;\r\n    setValue(\"first_name\", first_name);\r\n    setValue(\"last_name\", last_name);\r\n    setValue(\"role\", defaultRole);\r\n    setDefaultRole(defaultRole);\r\n  }, [first_name, last_name, role, setValue]);\r\n\r\n  const onSubmitHandler = (data, e) => {\r\n    e.preventDefault();\r\n    setSubmitted(true);\r\n    const input = {\r\n      _id,\r\n      first_name: data.first_name,\r\n      last_name: data.last_name,\r\n      role: isAdmin ? (data.role ? \"ADMIN\" : \"USER\") : role,\r\n    };\r\n    updateProfile({\r\n      variables: { input },\r\n    });\r\n  };\r\n  // Response: Submit Handler\r\n  React.useEffect(() => {\r\n    if (!loading && !error && data) {\r\n      const response = data.updateProfile;\r\n      setSeverity(response.severity);\r\n      setMessage(response.message);\r\n      isValidated(response.error, setError);\r\n      setSubmitted(false);\r\n    }\r\n  }, [loading, error, data, setSeverity, setMessage, setError]);\r\n  return (\r\n    <Box\r\n      component=\"form\"\r\n      onSubmit={handleSubmit(onSubmitHandler)}\r\n      noValidate\r\n      sx={{ mt: 1 }}\r\n      autoComplete=\"off\"\r\n    >\r\n      <Grid container>\r\n        <Grid container spacing={2} sx={{ mb: 2 }}>\r\n          {severity && message && (\r\n            <Grid item xs={12}>\r\n              <Alert\r\n                variant=\"standard\"\r\n                severity={severity}\r\n                sx={{ width: \"100%\", mt: 1 }}\r\n              >\r\n                {message}\r\n              </Alert>\r\n            </Grid>\r\n          )}\r\n        </Grid>\r\n        <Grid item xs={12} sx={{ mb: 2 }}>\r\n          <TextField\r\n            autoComplete=\"given-name\"\r\n            name=\"first_name\"\r\n            required\r\n            fullWidth\r\n            id=\"first_name\"\r\n            label=\"First Name\"\r\n            autoFocus\r\n            error={!!errors?.first_name?.message}\r\n            {...register(\"first_name\")}\r\n          />\r\n          {errors?.first_name && (\r\n            <FormHelperText error id=\"email-error\">\r\n              {errors?.first_name?.message}\r\n            </FormHelperText>\r\n          )}\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            required\r\n            fullWidth\r\n            id=\"last_name\"\r\n            label=\"Last Name\"\r\n            name=\"last_name\"\r\n            autoComplete=\"family-name\"\r\n            error={!!errors?.last_name?.message}\r\n            {...register(\"last_name\")}\r\n          />\r\n          {errors?.last_name && (\r\n            <FormHelperText error id=\"email-error\">\r\n              {errors?.last_name?.message}\r\n            </FormHelperText>\r\n          )}\r\n        </Grid>\r\n        {isAdmin && (\r\n          <Grid item xs={12}>\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox defaultChecked={defaultRole} {...register(\"role\")} />\r\n              }\r\n              label=\"Set as Admin\"\r\n            />\r\n          </Grid>\r\n        )}\r\n\r\n        <Grid item xs={12}>\r\n          <Button\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            sx={{ mt: 3, mb: 2, width: \"100%\" }}\r\n            aria-label=\"signup button\"\r\n            disabled={isSubmitted}\r\n          >\r\n            Update Profile\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\nUpdateProfileForm.propTypes = {\r\n  _id: PropTypes.string,\r\n  first_name: PropTypes.string,\r\n  last_name: PropTypes.string,\r\n  role: PropTypes.string,\r\n};\r\n\r\nUpdateProfileForm.defaultProps = {\r\n  _id: \"\",\r\n  first_name: \"\",\r\n  last_name: \"\",\r\n  role: \"\",\r\n};\r\n\r\nexport default UpdateProfileForm;\r\n","import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useLazyQuery } from \"@apollo/client\";\r\nimport {\r\n  Grid,\r\n  Container,\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  Button,\r\n  Alert,\r\n} from \"@mui/material\";\r\nimport UpdateProfileForm from \"./UpdateProfileForm\";\r\nimport { FIND_PROFILE_DETAIL } from \"../../../constants/Query\";\r\n\r\n// ================================|| LOGIN ||================================ //\r\n\r\nconst ProfileDetails = () => {\r\n  const { id } = useParams();\r\n  const [severity, setSeverity] = React.useState(\"error\");\r\n  const [message, setMessage] = React.useState(\"\");\r\n  const [showProfileForm, setShowProfileForm] = React.useState(false);\r\n  const [details, setDetails] = React.useState({\r\n    _id: \"\",\r\n    first_name: \"\",\r\n    last_name: \"\",\r\n    email: \"\",\r\n    status: \"\",\r\n    role: \"\",\r\n  });\r\n  const [userDetails, { loading, error, data }] =\r\n    useLazyQuery(FIND_PROFILE_DETAIL);\r\n\r\n  React.useEffect(() => {\r\n    userDetails({ variables: { input: { _id: id } } });\r\n  }, [id, userDetails]);\r\n\r\n  // Response: Loads data\r\n  React.useEffect(() => {\r\n    if (!loading && !error && data) {\r\n      const response = data.userDetails;\r\n      if (!response.response) {\r\n        setSeverity(\"error\");\r\n        setMessage(\"Sorry, Record does not exist.\");\r\n      } else {\r\n        setSeverity(\"\");\r\n        setMessage(\"\");\r\n        const { _id, first_name, last_name, email, role, status } =\r\n          response.response;\r\n        setDetails({\r\n          _id,\r\n          first_name,\r\n          last_name,\r\n          email,\r\n          role,\r\n          status: status.toLowerCase(),\r\n        });\r\n      }\r\n    }\r\n  }, [loading, error, data]);\r\n\r\n  const handleUpdateProfile = (e) => {\r\n    e.preventDefault();\r\n    setShowProfileForm(!showProfileForm);\r\n  };\r\n  return (\r\n    <Container sx={{p:0}}>\r\n      <Card>\r\n        <CardContent>\r\n          <Grid item xs={12}>\r\n            {severity && message && (\r\n              <Grid item xs={12}>\r\n                <Alert\r\n                  variant=\"standard\"\r\n                  severity={severity}\r\n                  sx={{ width: \"100%\", mt: 1 }}\r\n                >\r\n                  {message}\r\n                </Alert>\r\n              </Grid>\r\n            )}\r\n          </Grid>\r\n          {details.first_name && (\r\n            <Grid container>\r\n              <Grid item xs={12} sm={6}>\r\n                <Grid container>\r\n                  <Grid item xs={4}>\r\n                    <Typography variant=\"h5\" component=\"h5\">\r\n                      First Name\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item xs={8}>\r\n                    <Typography variant=\"h5\" component=\"h5\">\r\n                      {details.first_name}\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item xs={4}>\r\n                    <Typography variant=\"h5\" component=\"h5\">\r\n                      Last Name\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item xs={8}>\r\n                    <Typography variant=\"h5\" component=\"h5\">\r\n                      {details.last_name}\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item xs={4}>\r\n                    <Typography variant=\"h5\" component=\"h5\">\r\n                      Email\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item xs={8}>\r\n                    <Typography variant=\"h5\" component=\"h5\">\r\n                      {details.email}\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item xs={4}>\r\n                    <Typography variant=\"h5\" component=\"h5\">\r\n                      Status\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item xs={8}>\r\n                    <Typography\r\n                      variant=\"h5\"\r\n                      component=\"h5\"\r\n                      sx={{ textTransform: \"capitalize\" }}\r\n                    >\r\n                      {details.status}\r\n                    </Typography>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <Grid container>\r\n                  <Grid\r\n                    item\r\n                    xs={12}\r\n                    sx={{ display: \"flex\", justifyContent: \"flex-end\" }}\r\n                  >\r\n                    <Button variant=\"text\" onClick={handleUpdateProfile}>\r\n                      {showProfileForm ? \"Cancel Profile\" : \"Update profile\"}\r\n                    </Button>\r\n                  </Grid>\r\n                  {showProfileForm && (\r\n                    <Grid item xs={12}>\r\n                      <UpdateProfileForm {...details} />\r\n                    </Grid>\r\n                  )}\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          )}\r\n        </CardContent>\r\n      </Card>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ProfileDetails;\r\n","import { Grid } from '@mui/material';\r\n\r\nimport ProfileDetails from '../../molecules/ProfileDetails';\r\n\r\n// ================================|| LOGIN ||================================ //\r\n\r\nconst Profile = () => {\r\n  return (\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12}>\r\n          <ProfileDetails />\r\n        </Grid>\r\n      </Grid>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import { gql } from \"@apollo/client\";\r\n\r\nexport const SIGNUP = gql`\r\n  mutation signup($input: signupInput!) {\r\n    signup(input: $input) {\r\n      error {\r\n        key\r\n        value\r\n      }\r\n      message\r\n      severity\r\n    }\r\n  }\r\n`;\r\nexport const CHANGE_STATUS = gql`\r\n  mutation changeStatus($input: idInput!) {\r\n    changeStatus(input: $input) {\r\n      hasError\r\n      message\r\n      severity\r\n    }\r\n  }\r\n`;\r\nexport const DELETE_USER = gql`\r\n  mutation removeUser($input: idInput!) {\r\n    removeUser(input: $input) {\r\n      hasError\r\n      message\r\n      severity\r\n    }\r\n  }\r\n`;\r\nexport const CREATE_INVOICE = gql`\r\n  mutation createInvoice($input: invoiceInput!) {\r\n    createInvoice(input: $input) {\r\n      error {\r\n        key\r\n        value\r\n      }\r\n      message\r\n      severity\r\n    }\r\n  }\r\n`;\r\nexport const UPDATE_INVOICE = gql`\r\n  mutation updateInvoice($input: invoiceInput!) {\r\n    updateInvoice(input: $input) {\r\n      error {\r\n        key\r\n        value\r\n      }\r\n      message\r\n      severity\r\n    }\r\n  }\r\n`;\r\nexport const SET_PASSWORD = gql`\r\n  mutation setPassword($input: setPasswordInput!) {\r\n    setPassword(input: $input) {\r\n      error {\r\n        key\r\n        value\r\n      }\r\n      message\r\n      severity\r\n    }\r\n  }\r\n`;\r\n\r\nexport const CREATE_CARD = gql`\r\n  mutation createCard($input: cardInput!) {\r\n    createCard(input: $input) {\r\n      error {\r\n        key\r\n        value\r\n      }\r\n      message\r\n      severity\r\n    }\r\n  }\r\n`;\r\nexport const UPDATE_CARD = gql`\r\n  mutation updateCard($input: cardInput!) {\r\n    updateCard(input: $input) {\r\n      error {\r\n        key\r\n        value\r\n      }\r\n      message\r\n      severity\r\n    }\r\n  }\r\n`;\r\nexport const CHANGE_CARD_STATUS = gql`\r\n  mutation changeCardStatus($input: idInput!) {\r\n    changeCardStatus(input: $input) {\r\n      hasError\r\n      message\r\n      severity\r\n    }\r\n  }\r\n`;\r\nexport const CHANGE_INVOICE_STATUS = gql`\r\n  mutation changeInvoiceStatus($input: idInput!) {\r\n    changeInvoiceStatus(input: $input) {\r\n      hasError\r\n      message\r\n      severity\r\n    }\r\n  }\r\n`;\r\nexport const CHANGE_PASSWORD = gql`\r\n  mutation changePassword($input: changePasswordInput!) {\r\n    changePassword(input: $input) {\r\n      error {\r\n        key\r\n        value\r\n      }\r\n      message\r\n      severity\r\n    }\r\n  }\r\n`;\r\n\r\nexport const UPDATE_PROFILE = gql`\r\n  mutation updateProfile($input: updateProfileInput!) {\r\n    updateProfile(input: $input) {\r\n      error {\r\n        key\r\n        value\r\n      }\r\n      message\r\n      severity\r\n    }\r\n  }\r\n`;\r\nexport const DELETE_CARD = gql`\r\n  mutation removeCard($input: objIdInput!) {\r\n    removeCard(input: $input) {\r\n      hasError\r\n      message\r\n      severity\r\n    }\r\n  }\r\n`;\r\nexport const DELETE_INVOICE = gql`\r\n  mutation removeInvoice($input: objIdInput!) {\r\n    removeInvoice(input: $input) {\r\n      hasError\r\n      message\r\n      severity\r\n    }\r\n  }\r\n`;\r\n","import * as Yup from \"yup\";\r\n\r\nexport const signupSchema = Yup.object().shape({\r\n  first_name: Yup.string().min(3).max(150).required(\"Please enter first name\"),\r\n  last_name: Yup.string().min(3).max(150).required(\"Please enter last name\"),\r\n  email: Yup.string()\r\n    .max(150)\r\n    .email(\"Please indicate a valid email address.\")\r\n    .required(\"Please enter email address.\"),\r\n  password: Yup.string()\r\n    .required(\"Please Enter your password\")\r\n    .min(6, \"Your password must be longer than 6 characters.\")\r\n    .max(18)\r\n    .matches(/^(?=.{6,})/, \"Must Contain 6 Characters\")\r\n    .matches(\r\n      /^(?=.*[a-z])(?=.*[A-Z])/,\r\n      \"Must Contain One Uppercase, One Lowercase\"\r\n    ) // eslint-disable-next-line\r\n    .matches(/^(?=.*[!@#\\$%\\^&\\*])/, \"Must Contain One Special Case Character\")\r\n    .matches(/^(?=.{6,20}$)\\D*\\d/, \"Must Contain One Number\"),\r\n  confirmPassword: Yup.string()\r\n    .required(\"Please Enter your password\")\r\n    .min(6, \"Your password must be longer than 6 characters.\")\r\n    .max(18)\r\n    .matches(/^(?=.{6,})/, \"Must Contain 6 Characters\")\r\n    .matches(\r\n      /^(?=.*[a-z])(?=.*[A-Z])/,\r\n      \"Must Contain One Uppercase, One Lowercase\"\r\n    ) // eslint-disable-next-line\r\n    .matches(/^(?=.*[!@#\\$%\\^&\\*])/, \"Must Contain One Special Case Character\")\r\n    .matches(/^(?=.{6,20}$)\\D*\\d/, \"Must Contain One Number\")\r\n    .oneOf([Yup.ref(\"password\"), null], \"Passwords don't match!\")\r\n    .required(\"Please enter confirm password\"),\r\n});\r\nexport const loginSchema = Yup.object()\r\n  .shape({\r\n    email: Yup.string()\r\n      .email(\"Must be a valid email\")\r\n      .max(150)\r\n      .required(\"Email is required\"),\r\n    password: Yup.string().required(\"Please enter password\"),\r\n  })\r\n  .required();\r\n\r\nexport const forgotPasswordSchema = Yup.object()\r\n  .shape({\r\n    email: Yup.string()\r\n      .email(\"Must be a valid email\")\r\n      .max(150)\r\n      .required(\"Email is required\"),\r\n  })\r\n  .required();\r\nexport const setPasswordSchema = Yup.object().shape({\r\n  password: Yup.string()\r\n    .required(\"Please Enter your password\")\r\n    .min(6, \"Your password must be longer than 6 characters.\")\r\n    .max(18)\r\n    .matches(/^(?=.{6,})/, \"Must Contain 6 Characters\")\r\n    .matches(\r\n      /^(?=.*[a-z])(?=.*[A-Z])/,\r\n      \"Must Contain One Uppercase, One Lowercase\"\r\n    ) // eslint-disable-next-line\r\n    .matches(/^(?=.*[!@#\\$%\\^&\\*])/, \"Must Contain One Special Case Character\")\r\n    .matches(/^(?=.{6,20}$)\\D*\\d/, \"Must Contain One Number\"),\r\n  confirmPassword: Yup.string()\r\n    .required(\"Please Enter your password\")\r\n    .min(6, \"Your password must be longer than 6 characters.\")\r\n    .max(18)\r\n    .matches(/^(?=.{6,})/, \"Must Contain 6 Characters\")\r\n    .matches(\r\n      /^(?=.*[a-z])(?=.*[A-Z])/,\r\n      \"Must Contain One Uppercase, One Lowercase\"\r\n    ) // eslint-disable-next-line\r\n    .matches(/^(?=.*[!@#\\$%\\^&\\*])/, \"Must Contain One Special Case Character\")\r\n    .matches(/^(?=.{6,20}$)\\D*\\d/, \"Must Contain One Number\")\r\n    .oneOf([Yup.ref(\"password\"), null], \"Passwords don't match!\")\r\n    .required(\"Please enter confirm password\"),\r\n});\r\nexport const invoiceSchema = Yup.object().shape({\r\n  sticker_number: Yup.string().max(30).required(\"Strike number is required\"),\r\n  reference_number: Yup.string()\r\n    .max(30)\r\n    .required(\"Reference Number is required\"),\r\n  equipment_type: Yup.string().max(30).required(\"Equipment type is required\"),\r\n  equipment_description: Yup.string()\r\n    .max(200)\r\n    .required(\"Equipment description is required\"),\r\n  make: Yup.string().max(150).required(\"Make is required\"),\r\n  serial_number: Yup.string().max(100).required(\"Serial number is required\"),\r\n  year_of_manufacturing: Yup.string()\r\n    .max(30)\r\n    .required(\"Year of manufacturing is required\"),\r\n  plant_number: Yup.string().max(100).required(\"Plant number is required\"),\r\n  location_of_equipment: Yup.string()\r\n    .max(30)\r\n    .required(\"Location of the equipment is required\"),\r\n  owner_business_name: Yup.string()\r\n    .max(150)\r\n    .required(\"Owner's Business name is required\"),\r\n  owner_business_address: Yup.string()\r\n    .max(200)\r\n    .required(\"Owner's Business address is required\"),\r\n  details: Yup.string().max(200).required(\"details is required\"),\r\n  standard_specification: Yup.string()\r\n    .max(200)\r\n    .required(\"Standard Specification is required\"),\r\n  business_name: Yup.string().max(100).required(\"Business name is required\"),\r\n  business_address: Yup.string()\r\n    .max(200)\r\n    .required(\"Business address is required\"),\r\n  inspection_date: Yup.string().max(30).required(\"Inspection date is required\"),\r\n  inspection_next_date: Yup.string()\r\n    .max(30)\r\n    .required(\"Inspection next date is required\"),\r\n  inspector_name: Yup.string()\r\n    .max(100)\r\n    .required(\"Inspector's name is required\"),\r\n    resultStatus: Yup.string().required(\"resultStatus is required\"),\r\n});\r\n\r\nexport const cardSchema = Yup.object().shape({\r\n  name: Yup.string().max(150).required(\"Card holder name is required\"),\r\n  iqama_number: Yup.string().max(100).required(\"Iqama Number is required\"),\r\n  issue_date: Yup.string().max(30).required(\"Issue date is required\"),\r\n  expiry_date: Yup.string().max(30).required(\"Expiry date is required\"),\r\n  certified_as: Yup.string().max(100).required(\"Certified as is required\"),\r\n  company: Yup.string().max(100).required(\"Company as is required\"),\r\n  examiner: Yup.string().max(100).required(\"Examiner as is required\"),\r\n  profile_pic: Yup.string().nullable().notRequired(),\r\n});\r\n\r\nexport const updateProfileSchema = Yup.object().shape({\r\n  first_name: Yup.string().min(3).max(150).required(\"Please enter first name\"),\r\n  last_name: Yup.string().min(3).max(150).required(\"Please enter last name\"),\r\n  role: Yup.boolean().nullable().notRequired(),\r\n});\r\n\r\nexport const changePasswordSchema = Yup.object().shape({\r\n  oldPassword: Yup.string()\r\n    .required(\"Please Enter your old password\")\r\n    .min(6, \"Your password must be longer than 6 characters.\")\r\n    .max(18)\r\n    .matches(/^(?=.{6,})/, \"Must Contain 6 Characters\")\r\n    .matches(\r\n      /^(?=.*[a-z])(?=.*[A-Z])/,\r\n      \"Must Contain One Uppercase, One Lowercase\"\r\n    ) // eslint-disable-next-line\r\n    .matches(/^(?=.*[!@#\\$%\\^&\\*])/, \"Must Contain One Special Case Character\")\r\n    .matches(/^(?=.{6,20}$)\\D*\\d/, \"Must Contain One Number\"),\r\n  password: Yup.string()\r\n    .required(\"Please Enter your password\")\r\n    .min(6, \"Your password must be longer than 6 characters.\")\r\n    .max(18)\r\n    .matches(/^(?=.{6,})/, \"Must Contain 6 Characters\")\r\n    .matches(\r\n      /^(?=.*[a-z])(?=.*[A-Z])/,\r\n      \"Must Contain One Uppercase, One Lowercase\"\r\n    ) // eslint-disable-next-line\r\n    .matches(/^(?=.*[!@#\\$%\\^&\\*])/, \"Must Contain One Special Case Character\")\r\n    .matches(/^(?=.{6,20}$)\\D*\\d/, \"Must Contain One Number\"),\r\n  confirmPassword: Yup.string()\r\n    .required(\"Please Enter your password\")\r\n    .min(6, \"Your password must be longer than 6 characters.\")\r\n    .max(18)\r\n    .matches(/^(?=.{6,})/, \"Must Contain 6 Characters\")\r\n    .matches(\r\n      /^(?=.*[a-z])(?=.*[A-Z])/,\r\n      \"Must Contain One Uppercase, One Lowercase\"\r\n    ) // eslint-disable-next-line\r\n    .matches(/^(?=.*[!@#\\$%\\^&\\*])/, \"Must Contain One Special Case Character\")\r\n    .matches(/^(?=.{6,20}$)\\D*\\d/, \"Must Contain One Number\")\r\n    .oneOf([Yup.ref(\"password\"), null], \"Passwords don't match!\")\r\n    .required(\"Please enter confirm password\"),\r\n});\r\n\r\n\r\n"],"names":["UpdateProfileForm","_ref","_errors$first_name","_errors$first_name2","_errors$last_name","_errors$last_name2","_id","first_name","last_name","role","auth","useSelector","state","isAdmin","isLoggedIn","severity","setSeverity","React","message","setMessage","isSubmitted","setSubmitted","defaultRole","setDefaultRole","updateProfile","loading","error","data","useMutation","UPDATE_PROFILE","register","handleSubmit","setError","setValue","formState","errors","useForm","resolver","yupResolver","updateProfileSchema","response","isValidated","_jsx","Box","component","onSubmit","onSubmitHandler","e","preventDefault","input","variables","noValidate","sx","mt","autoComplete","children","_jsxs","Grid","container","spacing","mb","item","xs","Alert","variant","width","TextField","name","required","fullWidth","id","label","autoFocus","FormHelperText","FormControlLabel","control","Checkbox","defaultChecked","Button","type","disabled","defaultProps","ProfileDetails","useParams","showProfileForm","setShowProfileForm","details","setDetails","email","status","userDetails","useLazyQuery","FIND_PROFILE_DETAIL","toLowerCase","Container","p","Card","CardContent","sm","Typography","textTransform","display","justifyContent","onClick","Profile","SIGNUP","gql","_templateObject","_taggedTemplateLiteral","CHANGE_STATUS","_templateObject2","DELETE_USER","_templateObject3","CREATE_INVOICE","_templateObject4","UPDATE_INVOICE","_templateObject5","SET_PASSWORD","_templateObject6","CREATE_CARD","_templateObject7","UPDATE_CARD","_templateObject8","CHANGE_CARD_STATUS","_templateObject9","CHANGE_INVOICE_STATUS","_templateObject10","CHANGE_PASSWORD","_templateObject11","_templateObject12","DELETE_CARD","_templateObject13","DELETE_INVOICE","_templateObject14","signupSchema","Yup","shape","min","max","password","matches","confirmPassword","oneOf","loginSchema","forgotPasswordSchema","setPasswordSchema","invoiceSchema","sticker_number","reference_number","equipment_type","equipment_description","make","serial_number","year_of_manufacturing","plant_number","location_of_equipment","owner_business_name","owner_business_address","standard_specification","business_name","business_address","inspection_date","inspection_next_date","inspector_name","resultStatus","cardSchema","iqama_number","issue_date","expiry_date","certified_as","company","examiner","profile_pic","nullable","notRequired","changePasswordSchema","oldPassword"],"sourceRoot":""}