{"version":3,"file":"static/js/861.dbf0c995.chunk.js","mappings":"wOAWA,MA6DA,EA7DsBA,KACpB,MAAMC,GAAWC,EAAAA,EAAAA,OACVC,EAAUC,GAAeC,EAAAA,SAAe,UACxCC,EAASC,GAAcF,EAAAA,SAAe,KACtCG,EAAaC,GAAgBJ,EAAAA,UAAe,IAC5CK,GAAe,QAAEC,EAAO,MAAEC,EAAK,KAAEC,KAAUC,EAAAA,EAAAA,GAAYC,EAAAA,KACxD,SACJC,EAAQ,aACRC,EAAY,SACZC,EACAC,WAAW,OAAEC,KACXC,EAAAA,EAAAA,IAAQ,CACVC,UAAUC,EAAAA,EAAAA,GAAYC,EAAAA,MA+BxB,OAbAnB,EAAAA,WAAgB,KACd,IAAKM,IAAYC,GAASC,EAAM,CAC9B,MAAMY,EAAWZ,EAAKH,cACtBN,EAAYqB,EAAStB,UACrBI,EAAWkB,EAASnB,UACpBoB,EAAAA,EAAAA,IAAYD,EAASb,MAAOM,GAC5BT,GAAa,IACRgB,EAASb,OAASa,EAAStB,SAASwB,SAAS,YAChD1B,EAAS,eAEb,IACC,CAACU,EAASC,EAAOC,EAAMT,EAAaG,EAAYW,EAAUjB,KAG3D2B,EAAAA,EAAAA,KAACC,EAAAA,EAAW,CACVZ,aAAcA,EACda,gBA/BoBA,CAACjB,EAAMkB,KAC7BA,EAAEC,iBACF,IAAIC,EAAkBpB,EAAKoB,gBAAgBC,MAAM,KACjDD,EAAe,GAAAE,OAAMF,EAAgB,GAAE,KAAAE,OAAIF,EAAgB,GAAE,KAAAE,OAAIF,EAAgB,IACjF,IAAIG,EAAuBvB,EAAKuB,qBAAqBF,MAAM,KAC3DE,EAAoB,GAAAD,OAAMC,EAAqB,GAAE,KAAAD,OAAIC,EAAqB,GAAE,KAAAD,OAAIC,EAAqB,IAErG1B,EAAc,CACZ2B,UAAW,CACTC,MAAO,IAAKzB,EAAMoB,kBAAiBG,0BAErC,EAqBApB,SAAUA,EACVI,OAAQA,EACRjB,SAAUA,EACVG,QAASA,EACTE,YAAaA,EACb+B,MAAM,qBACNC,aAAa,SACbC,QAAQ,GACRC,YAAY,GACZC,yBAAyB,IACzB,C","sources":["components/templates/Certificate/Create.js"],"sourcesContent":["import React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport InvoiceForm from \"../../molecules/CertificateForm\";\r\nimport { invoiceSchema } from \"../../../utils/schema\";\r\nimport { CREATE_INVOICE } from \"../../../constants/Mutation\";\r\nimport { isValidated } from \"../../../utils/utils\";\r\n\r\nconst CreateInvoice = () => {\r\n  const navigate = useNavigate();\r\n  const [severity, setSeverity] = React.useState(\"error\");\r\n  const [message, setMessage] = React.useState(\"\");\r\n  const [isSubmitted, setSubmitted] = React.useState(false);\r\n  const [createInvoice, { loading, error, data }] = useMutation(CREATE_INVOICE);\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    setError,\r\n    formState: { errors },\r\n  } = useForm({\r\n    resolver: yupResolver(invoiceSchema),\r\n  });\r\n\r\n  const onSubmitHandler = (data, e) => {\r\n    e.preventDefault();\r\n    let inspection_date = data.inspection_date.split(\"/\");\r\n    inspection_date = `${inspection_date[2]}-${inspection_date[1]}-${inspection_date[0]}`;\r\n    let inspection_next_date = data.inspection_next_date.split(\"/\");\r\n    inspection_next_date = `${inspection_next_date[2]}-${inspection_next_date[1]}-${inspection_next_date[0]}`;\r\n\r\n    createInvoice({\r\n      variables: {\r\n        input: { ...data, inspection_date, inspection_next_date},\r\n      },\r\n    });\r\n  };\r\n\r\n  // Response: Submit Handler\r\n  React.useEffect(() => {\r\n    if (!loading && !error && data) {\r\n      const response = data.createInvoice;\r\n      setSeverity(response.severity);\r\n      setMessage(response.message);\r\n      isValidated(response.error, setError);\r\n      setSubmitted(false);\r\n      if (!response.error && response.severity.includes(\"success\")) {\r\n        navigate('/certificate');\r\n      }\r\n    }\r\n  }, [loading, error, data, setSeverity, setMessage, setError, navigate]);\r\n\r\n  return (\r\n    <InvoiceForm\r\n      handleSubmit={handleSubmit}\r\n      onSubmitHandler={onSubmitHandler}\r\n      register={register}\r\n      errors={errors}\r\n      severity={severity}\r\n      message={message}\r\n      isSubmitted={isSubmitted}\r\n      title=\"Create Certificate\"\r\n      submitBtnTxt=\"Create\"\r\n      insDate=\"\"\r\n      insNextDate=\"\"\r\n      resultStatusDefaultValue=\"\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default CreateInvoice;\r\n"],"names":["CreateInvoice","navigate","useNavigate","severity","setSeverity","React","message","setMessage","isSubmitted","setSubmitted","createInvoice","loading","error","data","useMutation","CREATE_INVOICE","register","handleSubmit","setError","formState","errors","useForm","resolver","yupResolver","invoiceSchema","response","isValidated","includes","_jsx","InvoiceForm","onSubmitHandler","e","preventDefault","inspection_date","split","concat","inspection_next_date","variables","input","title","submitBtnTxt","insDate","insNextDate","resultStatusDefaultValue"],"sourceRoot":""}